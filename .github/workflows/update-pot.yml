name: Update POT file 🌐

on:
  workflow_call:
    inputs:
      domain:
        type: string
        description: 'Text domain for the POT file'
        required: true
      slug:
        type: string
        description: 'Project slug'
        required: true
      package_name:
        type: string
        description: 'Package name for the header in the POT file'
        required: true
      headers:
        type: string
        description: 'Additional headers in JSON format'
        required: true
      pull_request_number:
        type: number
        description: 'Pull request number'
        required: true

jobs:
  update-pot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get pull request labels
        id: get_pr_labels
        uses: actions/github-script@v6
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ inputs.pull_request_number }}
            });
            const labels = pr.data.labels.map(label => label.name).join(',');
            core.setOutput('labels', labels);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if PR is a release PR
        id: skip_if_autorelease
        run: |
          if [[ "${{ steps.get_pr_labels.outputs.labels }}" == *"autorelease: pending"* ]]; then
            echo "This PR has an 'autorelease: pending' label. Skipping the workflow.";
            exit 0;
          fi

      - name: Set up PHP
        if: ${{ steps.skip_if_autorelease.conclusion != 'success' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: wp-cli/wp-cli-bundle

      - name: Update POT file
        if: ${{ steps.skip_if_autorelease.conclusion != 'success' }}
        run: wp i18n make-pot . languages/${{ github.event.repository.name }}.pot --domain=${{ inputs.domain }} --slug=${{ inputs.slug }} --package-name="${{ inputs.package_name }}" --headers='${{ inputs.headers }}'

      - name: Configure Git
        if: ${{ steps.skip_if_autorelease.conclusion != 'success' }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Commit and push .pot file
        if: ${{ steps.skip_if_autorelease.conclusion != 'success' }}
        run: |
          git checkout ${{ github.head_ref }}
          git add languages/${{ github.event.repository.name }}.pot
          git commit -m "chore(l10n): update pot file"
          git push origin ${{ github.head_ref }}