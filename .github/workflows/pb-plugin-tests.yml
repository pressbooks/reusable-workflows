name: Run Tests ðŸ§ª

on:
  workflow_call:
    inputs:
      use_mariadb:
        description: 'Use Maria DB'
        type: boolean
        required: false
        default: false
      requires_pressbooks:
        description: 'Require Pressbooks'
        type: boolean
        required: false
        default: false
      requires_private_repo:
        description: 'Require private repo'
        type: string
        required: false
        default: ''

jobs:
  tests:
    runs-on: ubuntu-20.04
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php: [ 8.1, 8.2 ]
        wordpress: [ 6.5, latest ]
        experimental: [ false ]
        include:
          - php: 8.2
            wordpress: 6.5
            experimental: true

    name: Test - PHP ${{ matrix.php }} - WP ${{ matrix.wordpress }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          coverage: pcov
          extensions: imagick

      - name: Check Inputs
        run: |
          echo "Requires Pressbooks: ${{ github.event.inputs.requires_pressbooks }}"
          echo "Requires Pressbooks: ${{ github.event.inputs.use_mariadb }}"
          echo "Requires Pressbooks: ${{ github.event.inputs.requires_private_repo }}"

      - name: Install PHP dependencies
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{secrets.PAT_FOR_GITHUB_ACTIONS}}"} }'
        run: |
          export PATH="$HOME/.composer/vendor/bin:$PATH"
          composer install --no-interaction
          echo "REPO_NAME=$(basename $(pwd))" >> $GITHUB_ENV

      - name: Check Standards
        run: composer standards

      - name: Remove MySQL
        if: github.event.inputs.use_mariadb == true
        run: sudo apt remove mysql-server-8.0 mysql-common

      - name: Update apt
        if: github.event.inputs.use_mariadb == true
        run: sudo apt-get update

      - name: Install MariaDB
        if: github.event.inputs.use_mariadb == true
        run: |
          sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
          echo "deb http://downloads.mariadb.com/MariaDB/mariadb-10.5/repo/ubuntu focal main" | sudo tee /etc/apt/sources.list.d/mariadb.list
          sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/mariadb.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"
          sudo apt-get install mariadb-server-10.5 mariadb-client-10.5
          sudo mysqladmin -p'' password 'root'

      - name: Start Database
        run: sudo systemctl start mysql.service && mysql --version

      - name: Require Pressbooks
        if: github.event.inputs.requires_pressbooks == true
        run: |
          git clone --depth=1 https://github.com/pressbooks/pressbooks.git ../pressbooks
          cd ../pressbooks && composer install --no-dev
          cd ../$REPO_NAME

      - name: Require Private Repo
        if: github.event.inputs.requires_private_repo != ''
        run: |
          git clone --depth=1 https://x-access-token:${{secrets.PAT_FOR_GITHUB_ACTIONS}}@github.com/pressbooks/${{ github.event.inputs.requires_private_repo }}.git ../${{ github.event.inputs.requires_private_repo }}
          cd ../${{ github.event.inputs.requires_private_repo }} && composer install --no-dev
          cd ../$REPO_NAME

      - name: Install WP tests
        run: bash bin/install-wp-tests.sh wordpress_test root root localhost ${{ matrix.wordpress }}

      - name: Run PHP Tests
        run: composer test
        if: matrix.experimental == true

      - name: Run PHP Tests and PCOV
        run: composer test-coverage
        if: matrix.experimental == false

      - name: Upload Coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
        if: matrix.experimental == false

    outputs:
      coverage: ${{ matrix.experimental == false }}