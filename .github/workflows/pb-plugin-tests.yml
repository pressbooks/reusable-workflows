name: Run Tests ðŸ§ª

on:
  workflow_call:
    inputs:
      use_mariadb:
        description: 'Use Maria DB'
        type: boolean
        required: false
        default: false
      requires_pressbooks:
        description: 'Require Pressbooks'
        type: boolean
        required: false
        default: false
      requires_private_repo:
        description: 'Require private repo'
        type: string
        required: false
        default: ''
      code_coverage:
        description: 'Code coverage'
        type: boolean
        required: false
        default: true

jobs:
  mysql-tests:
    if: "!inputs.use_mariadb"
    runs-on: ubuntu-20.04
    services:
      database:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        include:
          - php: 8.1
            wordpress: 6.7
            experimental: false
          - php: 8.1
            wordpress: latest
            experimental: false
          - php: 8.2
            wordpress: 6.7
            experimental: true

    name: Test - PHP ${{ matrix.php }} - WP ${{ matrix.wordpress }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          coverage: pcov
          extensions: imagick

      - name: Install PHP dependencies
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{secrets.PAT_FOR_GITHUB_ACTIONS}}"} }'
        run: |
          export PATH="$HOME/.composer/vendor/bin:$PATH"
          composer install --no-interaction
          echo "REPO_NAME=$(basename $(pwd))" >> $GITHUB_ENV

      - name: Check Standards
        run: composer standards

      - name: Require Pressbooks
        if: inputs.requires_pressbooks == true
        run: |
          git clone --depth=1 https://github.com/pressbooks/pressbooks.git ../pressbooks
          cd ../pressbooks && composer install --no-dev
          cd ../$REPO_NAME

      - name: Require Private Repo
        if: inputs.requires_private_repo != ''
        run: |
          git clone --depth=1 https://x-access-token:${{secrets.PAT_FOR_GITHUB_ACTIONS}}@github.com/pressbooks/${{ inputs.requires_private_repo }}.git ../${{ inputs.requires_private_repo }}
          cd ../${{ inputs.requires_private_repo }} && composer install --no-dev
          cd ../$REPO_NAME

      - name: Install WP tests
        run: bash bin/install-wp-tests.sh wordpress_test root root 127.0.0.1 ${{ matrix.wordpress }}

      - name: Run PHP Tests
        run: composer test
        if: matrix.experimental == true

      - name: Run PHP Tests and PCOV
        run: composer test-coverage
        if: matrix.experimental == false && inputs.code_coverage == true

      - name: Upload Coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
        if: matrix.experimental == false && inputs.code_coverage == true

  mariadb-tests:
    if: inputs.use_mariadb
    runs-on: ubuntu-20.04
    services:
      database:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        include:
          - php: 8.1
            wordpress: 6.7
            experimental: false
          - php: 8.1
            wordpress: latest
            experimental: false
          - php: 8.2
            wordpress: 6.7
            experimental: true

    name: Test - PHP ${{ matrix.php }} - WP ${{ matrix.wordpress }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: vendor
          key: php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          coverage: pcov
          extensions: imagick

      - name: Install PHP dependencies
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{secrets.PAT_FOR_GITHUB_ACTIONS}}"} }'
        run: |
          export PATH="$HOME/.composer/vendor/bin:$PATH"
          composer install --no-interaction
          echo "REPO_NAME=$(basename $(pwd))" >> $GITHUB_ENV

      - name: Check Standards
        run: composer standards

      - name: Require Pressbooks
        if: inputs.requires_pressbooks == true
        run: |
          git clone --depth=1 https://github.com/pressbooks/pressbooks.git ../pressbooks
          cd ../pressbooks && composer install --no-dev
          cd ../$REPO_NAME

      - name: Require Private Repo
        if: inputs.requires_private_repo != ''
        run: |
          git clone --depth=1 https://x-access-token:${{secrets.PAT_FOR_GITHUB_ACTIONS}}@github.com/pressbooks/${{ inputs.requires_private_repo }}.git ../${{ inputs.requires_private_repo }}
          cd ../${{ inputs.requires_private_repo }} && composer install --no-dev
          cd ../$REPO_NAME

      - name: Install WP tests
        run: bash bin/install-wp-tests.sh wordpress_test root root 127.0.0.1 ${{ matrix.wordpress }}

      - name: Run PHP Tests
        run: composer test
        if: matrix.experimental == true

      - name: Run PHP Tests and PCOV
        run: composer test-coverage
        if: matrix.experimental == false && inputs.code_coverage == true

      - name: Upload Coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
        if: matrix.experimental == false && inputs.code_coverage == true
